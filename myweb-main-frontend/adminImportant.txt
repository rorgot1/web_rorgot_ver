<template>
  <div>
    <table class="table">
      <thead>
        <tr>
          <th style="width: 10%;">Job No.</th>
          <th style="width: 20%;">EN</th>
          <th style="width: 30%;">Requester</th>
          <th style="width: 30%;">Section</th>
          <th style="width: 15%;">Tel.</th>
          <th style="width: 20%;">Create date</th>
          <th style="width: 20%;">Type</th>
          <th style="width: 20%;">Device</th>
          <th style="width: 20%;">Detail</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="(item, index) in meme" :key="index">
          <td>{{ item.job_no }}</td>
          <td>{{ item.en }}</td>
          <td>{{ item.requester }}</td>
          <td>{{ item.department }}</td>
          <td>{{ item.tel }}</td>
          <td>{{ item.create_date }}</td>
          <td>{{ item.type }}</td>
          <td>{{ item.resource }}</td>
          <td>{{ item.reason }}</td>
          <td>
            <div class="status-cell">
              <span v-if="item.editing !== index" :style="{ color: getStatusColor(item.status) }">{{ item.status
                }}</span>
              <div v-else class="custom-dropdown">
                <select v-model="item.updatedStatus" class="dropdown-menu">
                  <option value="wait" :style="{ color: 'rgb(0, 0, 0)' }">Wait</option>
                  <option value="true" :style="{ color: 'rgb(0, 128, 0)' }">True</option>
                  <option value="false" :style="{ color: 'rgb(255, 0, 0)' }">False</option>
                </select>
                <div class="dropdown-arrow"></div>
              </div>
              <button @click="editStatus(index)" class="edit-button">Edit</button>
              <div v-if="item.editing === index" class="action-buttons">
                <button @click="applyEdit(index)" class="apply-button" style="background-color: green;">Apply</button>
                <button @click="cancelEdit(index)" class="cancel-button" style="background-color: red;">Cancel</button>
              </div>
            </div>
          </td>
          <td>
            <!-- Placeholder for Export button -->
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  <!--<div>
    <button @click="test_data" class="rounded-full bg-green-500 text-white px-4 py-2">Test data</button>
  </div>-->

</template>

<script setup>
const meme = ref();
const test_data = async () => {
  try {
    const response = await $fetch('http://localhost:5600/api/IT_Repair_data_table', {
      method: "POST",
      credentials: 'include'
    })
    meme.value = response.results
    console.log(response.results);
  } catch (error) {
    console.error('Failed to show data:', error);
  }
}
test_data();

/*import { ref } from 'vue';

const items = ref([
  { id: 1, name: 'John', answer: 'Yes', status: 'Wait', editing: -1, updatedStatus: '' },
  { id: 2, name: 'Jane', answer: 'No', status: 'Wait', editing: -1, updatedStatus: '' },
  // Add more items as needed
]);*/

const getStatusColor = (status) => {
  switch (status) {
    case 'wait':
      return 'black';
    case 'true':
      return 'green';
    case 'false':
      return 'red';
    default:
      return 'black';
  }
};

const editStatus = (index) => {
  items.value[index].editing = index;
  items.value[index].updatedStatus = items.value[index].status;
};

const cancelEdit = (index) => {
  items.value[index].editing = -1;
};

const applyEdit = (index) => {
  items.value[index].status = items.value[index].updatedStatus;
  items.value[index].editing = -1;
};
</script>

<style scoped>
/* Add your custom styles here */
.table {
  width: 100%;
  border-collapse: collapse;
}

.table th,
.table td {
  border: 1px solid #ccc;
  padding: 8px;
}

.status-cell {
  position: relative;
}

.edit-button {
  position: absolute;
  top: 50%;
  right: 0%;
  transform: translateY(-50%);
  padding: 6px 10px;
  cursor: pointer;
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 4px;
}

.edit-button:hover {
  background-color: #0056b3;
}

.action-buttons {
  position: absolute;
  top: 50%;
  right: 0%;
  transform: translateY(-50%);
}

.apply-button,
.cancel-button {
  padding: 6px 10px;
  cursor: pointer;
  color: #fff;
  border: none;
  border-radius: 4px;
  margin-left: 4px;
}

.apply-button:hover {
  background-color: darkgreen;
}

.cancel-button:hover {
  background-color: darkred;
}

.custom-dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-menu {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #fff;
  color: #333;
  width: 120%;
  /* Adjust the initial width */
  max-width: 150px;
  /* Set a maximum width for responsiveness */
}

.dropdown-arrow {
  position: absolute;
  top: 50%;
  right: -15%;
  /* Adjust the right distance */
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 6px 6px 0 6px;
  border-color: #666 transparent transparent transparent;
}
</style>